[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-options-order-flow-server"
version = "1.0.0"
description = "High-performance MCP server for options order flow analysis with real-time pattern detection"
authors = [
    {name = "Options Analytics", email = "info@options-analytics.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
keywords = [
    "mcp", "options", "trading", "order-flow", "pattern-detection", 
    "institutional-analysis", "real-time", "grpc", "fastmcp"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: AsyncIO",
]

dependencies = [
    "fastmcp>=0.1.0",
    "grpcio>=1.60.0",
    "grpcio-tools>=1.60.0", 
    "protobuf>=4.25.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0"
]

[project.urls]
Homepage = "https://github.com/your-org/mcp-options-order-flow-server"
Documentation = "https://github.com/your-org/mcp-options-order-flow-server#readme"
Repository = "https://github.com/your-org/mcp-options-order-flow-server"
Issues = "https://github.com/your-org/mcp-options-order-flow-server/issues"
Changelog = "https://github.com/your-org/mcp-options-order-flow-server/releases"

[project.scripts]
mcp-options-flow = "src.mcp_server:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
"src.proto" = ["*.py"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Exclude auto-generated files
  src/proto/.*_pb2\.py
  | src/proto/.*_pb2_grpc\.py
)/
'''

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["src"]
skip_glob = ["src/proto/*_pb2.py", "src/proto/*_pb2_grpc.py"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
    "src/proto",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "src/proto/.*_pb2\\.py$",
    "src/proto/.*_pb2_grpc\\.py$",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "src/proto/*_pb2.py",
    "src/proto/*_pb2_grpc.py",
    "tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]